import Foundation

// Script de test pour reclassifier automobile comme emprunt compos√©
// √Ä ex√©cuter depuis ContentView ou en debug

class AutomobileReclassifier {
    
    static func reclassifyAutomobile() async {
        print("üöó D√©but de la reclassification d'automobile...")
        
        do {
            // 1. Chercher automobile
            if let automobile = try await SupabaseService.shared.fetchWord("automobile") {
                print("‚úÖ Automobile trouv√©: ID = \(automobile.id)")
                print("üìä √âtat actuel: isComposedWord = \(automobile.isComposedWord)")
                print("üìä Composants actuels: \(automobile.components)")
                
                // 2. Reclassifier si n√©cessaire
                if !automobile.isComposedWord || automobile.components != ["auto-", "mobile"] {
                    print("üîß Reclassification n√©cessaire...")
                    
                    try await SupabaseService.shared.reclassifyAsBorrowedComposition(
                        wordId: automobile.id,
                        components: ["auto-", "mobile"]
                    )
                    
                    print("üéâ Reclassification termin√©e !")
                    
                    // 3. V√©rification
                    print("üîç V√©rification...")
                    if let updatedAutomobile = try await SupabaseService.shared.fetchWord("automobile") {
                        print("‚úÖ V√©rification r√©ussie:")
                        print("   - isComposedWord: \(updatedAutomobile.isComposedWord)")
                        print("   - components: \(updatedAutomobile.components)")
                    }
                } else {
                    print("‚úÖ Automobile d√©j√† correctement classifi√© !")
                }
            } else {
                print("‚ùå Automobile non trouv√© en base")
            }
        } catch {
            print("‚ùå Erreur lors de la reclassification: \(error)")
        }
    }
}

// Usage dans ContentView ou autre:
// Task {
//     await AutomobileReclassifier.reclassifyAutomobile()
// } 